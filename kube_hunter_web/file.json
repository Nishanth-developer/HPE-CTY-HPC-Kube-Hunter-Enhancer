{"khv002": {"vulnerability_name": "Kubernetes version disclosure", "severity": "LOW", "issue_description": "The fact that your infrastructure is using Kubernetes, and the specific version of Kubernetes used is publicly available, and could be used by an attacker to target your environment with known vulnerabilities in the specific version of Kubernetes you are using.\nThis information could have been obtained from the Kubernetes API ", "remediation": "Disable ", "remedy_links": "No remedy links given in website!", "references": ["https://github.com/kubernetes/kubernetes/blob/4a6935b31fcc4d1498c977d90387e02b6b93288f/pkg/kubelet/server/server.go", "https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/#options"], "vulnerability_solution": "The vulnerability (khv002) is related to the fact that your Kubernetes cluster's version is publicly available, making it easier for attackers to exploit known vulnerabilities. To fix this issue, you need to disable the --enable-debugging-handlers flag in kubelet.\nTo do this, follow these steps:\nSSH into the node where kubelet is running\nOpen the kubelet configuration file located at /etc/kubernetes/kubelet.conf\nAdd --enable-debugging-handlers=false to the KUBELET_ARGS variable\nSave and close the file\nRestart the kubelet process using the command sudo systemctl restart kubelet\nBy following these steps, you will successfully disable the --enable-debugging-handlers flag in kubelet, which will prevent attackers from exploiting known vulnerabilities in your Kubernetes cluster's specific version"}, "khv005": {"vulnerability_name": "Access to Kubernetes API", "severity": "HIGH", "issue_description": "Kubernetes API was accessed with Pod Service Account or without Authentication (see report message for details).", "remediation": "Secure access to your Kubernetes API.", "remedy_links": "No remedy links given in website!", "references": ["https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"], "vulnerability_solution": "Steps you can follow to fix vulnerability khv005:\n\nExplicitly specify a Service Account for all of your workloads by setting the serviceAccountName field in Pod.Spec. This ensures that each workload has its own Service Account, which can be managed independently and with the least privilege principle in mind. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/ for more details.\n\nConsider opting out automatic mounting of the Service Account token using automountServiceAccountToken: false on ServiceAccount resource or Pod.spec. By default, Kubernetes automatically mounts Service Account tokens into pods, but if the tokens are not needed, it is better to disable this feature to reduce the attack surface. Refer to https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#disable-automatic-mounting-of-the-serviceaccount-token for more details.\n\nReview the RBAC (Role-Based Access Control) permissions for the Service Accounts used by your workloads, and ensure that they have only the necessary permissions required to perform their tasks. You can do this by running the following command:\n\nkubectl get pod <pod-name> -o jsonpath='{.spec.serviceAccountName}'\nReplace <pod-name> with the name of the pod whose Service Account you want to check.\n\nBy following these steps, you will mitigate vulnerability khv005 by securing access to your Kubernetes API through the use of Service Accounts and RBAC permissions, and reducing the attack surface by disabling automatic mounting of Service Account tokens when they are not needed."}, "khv050": {"vulnerability_name": "Read access to Pod service account token", "severity": "MEDIUM", "issue_description": "Every Pod in Kubernetes is associated with a Service Account which by default has access to the Kubernetes API. This access is made available to Pods by an auto-generated token that is made available to the Pod by Kubernetes. An attacker with access to a Pod can read the token and access the Kubernetes API.", "remediation": "It is recommended to explicitly specify a Service Account for all of your workloads (", "remedy_links": "No remedy links given in website!", "references": ["https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"], "vulnerability_solution": "Sure, here are the steps you can follow to fix vulnerability khv050:\n\nExplicitly specify a Service Account for all of your workloads using serviceAccountName in Pod.Spec. This will allow you to manage the permissions of the Service Account according to the least privilege principle.\n\nConsider opting out automatic mounting of Service Account token using automountServiceAccountToken: false on ServiceAccount resource or Pod.Spec. This will prevent the Service Account token from being automatically mounted into containers in the pod, reducing the attack surface.\n\nImplement proper authentication and authorization mechanisms to secure access to your Kubernetes cluster and applications.\n\nBy following these steps, you will mitigate vulnerability khv050 by explicitly specifying a Service Account for all of your workloads, opting-out automatic mounting of SA token where possible, and ensuring proper authentication and authorization mechanisms are in place to secure access to your Kubernetes cluster and applications. The reference above provides more information on how to configure Service Accounts in Kubernetes."}}